name: Python Tests

on:
  push:
    branches: 
      - main
      - develop
      - pruebas
  pull_request:
    branches: 
      - main
      - develop
      - pruebas

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask pyrebase pytest pytest-flask pytest-mock python-dotenv validate_email werkzeug
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Create .env file
      run: |
        echo "API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env
        echo "AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
        echo "DATABASE_URL=${{ secrets.FIREBASE_DATABASE_URL }}" >> .env
        echo "PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
        echo "STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
        echo "MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env
        echo "APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
    
    - name: Run tests
      run: |
        pytest tests/ -v

    - name: Check test results
      if: always()
      run: |
        EXIT_CODE=$?
        if [ $EXIT_CODE -eq 0 ]; then
          echo "Tests passed successfully"
          exit 0
        else
          echo "Tests failed"
          exit 1
        fi